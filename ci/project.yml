---
format_version: '11'
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: ios
trigger_map:
- pull_request_source_branch: "*"
  workflow: pull-request
  pull_request_target_branch: develop
- tag: "*_test"
  workflow: main-test
- tag: "*_release"
  workflow: main-release
- tag: "*"
  workflow: main
workflows:
  archive:
    steps:
    - cache-pull@2: {}
    - xcode-archive@4:
        inputs:
        - distribution_method: app-store
        - configuration: "$BUILD_CONFIGURATION"
        - automatic_code_signing: api-key
        - scheme: "$BITRISE_SCHEME"
        is_always_run: true
    - cache-push@2: {}
  build-info:
    steps:
    - xcode-project-info@2:
        inputs:
        - xcodeproj_path: "$BITRISE_PROJECT_PATH"
        - target: ''
        - info_plist_path: "$BITRISE_APP_DIR_PATH/Info.plist"
  clone:
    steps:
    - activate-ssh-key@4:
        is_skippable: true
    - git-clone@6:
        inputs:
        - fetch_tags: 'yes'
  deploy-testflight:
    steps:
    - deploy-to-itunesconnect-application-loader@1:
        inputs:
        - connection: api_key
  main:
    after_run: []
    steps:
    - trigger-bitrise-workflow@0:
        inputs:
        - workflow_id: main-test
        - api_token: "$BUILD_TRIGGER_API_TOKEN"
        title: Trigger Bitrise Staging workflow
    - trigger-bitrise-workflow@0:
        title: Trigger Bitrise Release workflow
        inputs:
        - workflow_id: main-release
        - api_token: "$BUILD_TRIGGER_API_TOKEN"
  main-release:
    after_run:
    - clone
    - prepare-release
    - archive
    - deploy-testflight
    - notify
  main-test:
    after_run:
    - clone
    - prepare-test
    - archive
    - deploy-testflight
    - notify
  notify:
    after_run: []
    steps:
    - git::https://github.com/monstar-lab-oss/bitrise-changelog-step.git@main:
        inputs:
        - ticket_message_format: "%ticket - %message"
        - custom_other_name: "\U0001F4BE Other changes"
    - slack:
        inputs:
        - webhook_url: ''
        - channel: "$SLACK_CHANNEL"
        - pretext: 'Fresh iOS build is out. Made with :heart: by $GIT_CLONE_COMMIT_AUTHOR_NAME'
        - message: |-
            ```
            $COMMIT_CHANGELOG
            ```
        - emoji: ":applerainbow:"
        - message_on_error: 'Ah! Something went wrong :sweat:'
        - emoji_on_error: ":applerainbow:"
        - title_link: ''
        - color: "#f8f825"
        - channel_on_error: ''
        - text: ''
        - api_token: "$SLACK_TOKEN"
        - title: 'BUILD CHANGELOG: '
        - footer: ''
        - author_name: ''
        - fields: |
            App|${BITRISE_APP_TITLE}
            Branch|${BITRISE_GIT_BRANCH}
            Configuration|${BUILD_CONFIGURATION}
            Version|$XPI_VERSION ($XPI_BUILD)
        is_always_run: false
    before_run:
    - clone
    - build-info
  prepare-release:
    steps:
    - set-env-var:
        inputs:
        - destination_keys: BUILD_CONFIGURATION
        - value: "$RELEASE_BUILD_CONFIGURATION"
  prepare-test:
    steps:
    - set-env-var:
        inputs:
        - destination_keys: BUILD_CONFIGURATION
        - value: "$TEST_BUILD_CONFIGURATION"
  pull-request:
    after_run:
    - clone
    - prepare-test
    - run-sonarqube
  run-sonarqube:
    steps:
    - xcode-test@4: {}
    - file-downloader@1:
        inputs:
        - destination: xccov-to-sonarqube-generic.sh
        - file_permission: '755'
        - source: https://raw.githubusercontent.com/SonarSource/sonar-scanning-examples/master/swift-coverage/swift-coverage-example/xccov-to-sonarqube-generic.sh
    - brew-install@0:
        inputs:
        - packages: jq
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # make pipelines' return status equal the last command to exit with a non-zero status, or zero if all commands exit successfully
            set -o pipefail
            # debug log
            set -x

            echo "Converting code coverage log to Sonar format"
            ./xccov-to-sonarqube-generic.sh $BITRISE_XCRESULT_PATH > cov.xml
    - sonarqube-scanner@1:
        inputs:
        - scanner_properties:
            # replace with your project's sonarqube details, see https://monstarlab.atlassian.net/wiki/spaces/CTO/pages/7591755784/SonarQube+Setup#Set-up-Bitrise-Workflow-for-Pull-Request
             "sonar.projectKey=nodes-projects_test-project-ios_AYPqTLvTjO42SgPMhvYd\nsonar.sources=.\nsonar.host.url=https://sonar.monstarlab.io
            \nsonar.login=sqp_7e5a2885218659a6db6343fb0926e7923b73fbd9\nsonar.coverageReportPaths=cov.xml\nsonar.c.file.suffixes=-\nsonar.cpp.file.suffixes=-\nsonar.objc.file.suffixes=-"
meta:
  bitrise.io:
    stack: osx-xcode-14.1.x-ventura
app:
  envs:
  - opts:
      is_expand: false
    SLACK_CHANNEL: REPLACE_SLACK_CHANNEL # replace with your project's Slack Channel name
  - opts:
      is_expand: false
    RELEASE_BUILD_CONFIGURATION: Release
  - opts:
      is_expand: false
    TEST_BUILD_CONFIGURATION: Staging
    # REPLACE: This is the project config file
  - BITRISE_PROJECT_PATH: REPLACE_PROJECT_NAME.xcodeproj
    opts:
      is_expand: false
  - opts:
      is_expand: false
    # REPLACE: This is the name of the main app scheme in your project
    BITRISE_SCHEME: REPLACE_SCHEME_NAME
  - opts:
      is_expand: false
    BITRISE_DISTRIBUTION_METHOD: app-store
  - opts:
      is_expand: false
    BUILD_CONFIGURATION: ''

